T = (1, 2.0, "twelve")
- this is a tuple.
- its values have an index (T[1] = 2.0)
- the values cannot change because it is immutable.
- can have mixed contents.

D = {"one" : 1, "two" : 2, "three" : 85}
- this is a dictionary.
- its values have a key (key : value)
- the values can change because it is mutable.
- can have mixed contents.

    For D:
    - D["two"] will print 2
    - to change a value:
        - let D2 = {"one" : 1, "two" : 2, "three" : 85}
        - D2["three"] = 3 will print 3

L = [[1,2,3],[4.0,5.0],["six"]]
- this is a list embedded with sub-lists.
- its values are accessed by integer indices (L[0][0] = 2)
- the values can change because it is mutable.
- can have mixed contents.

    For L:
    - len(L[2][0]) will print 3 because there are three characters in 'six'

A = np.array([2.0, 8.5, 3])
- this is a numpy array.
- its values are accessed by angle brackets (A[2] = np.float64(3.0))
- the values can change because it is mutable.
- cannot have mixed contents (uniform data).
- cannot have a jagged array (nxn - uniform shape)

    For A:
    - A = np.array([2.0, 8.5, 3]) will print array([2. , 8.5, 3. ])
    - A.shape will print (3,)
        - for X1 = np.array([[1,2,3],[4,5,6]], dtype = 'float64'), X1.shape is (2, 3) of dimension 1 and 2 respectively
    - array-like: anything that can be converted to an array
        - can contain strings but all data must be a string (uniform)
        - if there are non-uniform types, they must be convertable
        - to change int to float:
            -  X1 = np.array([[1,2,3],[4,5,6]], dtype = 'float64') will print array([[1., 2., 3.],[4., 5., 6.]])
    - ndarry: a multi-dimensional array of items of the same type and size.
    - to change a value:
        - A[1] = -6 will print np.float(-6.0)
    - to grow array:
        - for C = np.array([ 4., 13.,  6.]), C_bigger = np.hstack([C, 5.0]) will print array([ 4., 13.,  6.,  5.])
    - to stack vertically:
         - X5 = np.vstack([X,X1]) to stack the array's vertically
    - @ is equivalent to the dot product (matrix multiplication)

